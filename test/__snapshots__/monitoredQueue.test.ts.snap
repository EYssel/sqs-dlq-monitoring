// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MonitoredQueue should create a monitored queue 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "testDLQAlarmFF94B263": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "testTopic20AA7407",
          },
        ],
        "AlarmName": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::GetAtt": [
                  "testDeadLetterQueueA5F7D72D",
                  "QueueName",
                ],
              },
              "-alarm",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "QueueName",
            "Value": {
              "Fn::GetAtt": [
                "testDeadLetterQueueA5F7D72D",
                "QueueName",
              ],
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ApproximateNumberOfMessagesVisible",
        "Namespace": "AWS/SQS",
        "OKActions": [
          {
            "Ref": "testTopic20AA7407",
          },
        ],
        "Period": 300,
        "Statistic": "Maximum",
        "Threshold": 5,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testDeadLetterQueueA5F7D72D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "QueueName": "test-dlq",
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "testQueueA1A031F3": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "QueueName": "test",
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "testDeadLetterQueueA5F7D72D",
              "Arn",
            ],
          },
          "maxReceiveCount": 3,
        },
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "testTopic20AA7407": {
      "Properties": {
        "TopicName": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::GetAtt": [
                  "testDeadLetterQueueA5F7D72D",
                  "QueueName",
                ],
              },
              "-alarm-topic",
            ],
          ],
        },
      },
      "Type": "AWS::SNS::Topic",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`MonitoredQueue should create a monitored queue with a custom DLQ 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "DLQ581697C4": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "QueueName": "custom-dlq",
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "testDLQAlarmFF94B263": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "testTopic20AA7407",
          },
        ],
        "AlarmName": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::GetAtt": [
                  "DLQ581697C4",
                  "QueueName",
                ],
              },
              "-alarm",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "QueueName",
            "Value": {
              "Fn::GetAtt": [
                "DLQ581697C4",
                "QueueName",
              ],
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ApproximateNumberOfMessagesVisible",
        "Namespace": "AWS/SQS",
        "OKActions": [
          {
            "Ref": "testTopic20AA7407",
          },
        ],
        "Period": 300,
        "Statistic": "Maximum",
        "Threshold": 5,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testQueueA1A031F3": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "QueueName": "test",
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "DLQ581697C4",
              "Arn",
            ],
          },
          "maxReceiveCount": 3,
        },
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "testTopic20AA7407": {
      "Properties": {
        "TopicName": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::GetAtt": [
                  "DLQ581697C4",
                  "QueueName",
                ],
              },
              "-alarm-topic",
            ],
          ],
        },
      },
      "Type": "AWS::SNS::Topic",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`MonitoredQueue should create a monitored queue with a lambda SNS listener and Lambda Subscription 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "5bc602ecde93c947efe5899ae355f999986a1acbe610b1c0b9c468d738857555.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testDLQAlarmFF94B263": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "testTopic20AA7407",
          },
        ],
        "AlarmName": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::GetAtt": [
                  "testDeadLetterQueueA5F7D72D",
                  "QueueName",
                ],
              },
              "-alarm",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "QueueName",
            "Value": {
              "Fn::GetAtt": [
                "testDeadLetterQueueA5F7D72D",
                "QueueName",
              ],
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ApproximateNumberOfMessagesVisible",
        "Namespace": "AWS/SQS",
        "OKActions": [
          {
            "Ref": "testTopic20AA7407",
          },
        ],
        "Period": 300,
        "Statistic": "Maximum",
        "Threshold": 5,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testDeadLetterQueueA5F7D72D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "QueueName": "test-dlq",
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "testQueueA1A031F3": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "QueueName": "test",
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "testDeadLetterQueueA5F7D72D",
              "Arn",
            ],
          },
          "maxReceiveCount": 3,
        },
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "testSlackNotificationLambdaAllowInvoketestTopicFC4454569C5983A0": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "testSlackNotificationLambdaF8C3E91E",
            "Arn",
          ],
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "testTopic20AA7407",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testSlackNotificationLambdaF8C3E91E": {
      "DependsOn": [
        "testSlackNotificationLambdaServiceRole5E2AB417",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "f28977b4f47f136211b3e3791f163fa3cef33786dc1f88f323bd6748fd9aa77a.zip",
        },
        "Environment": {
          "Variables": {
            "SLACK_BOT_TOKEN": "test",
            "SLACK_CHANNEL": "test",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "testSlackNotificationLambdaServiceRole5E2AB417",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "testSlackNotificationLambdaLogRetention50573FD2": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "testSlackNotificationLambdaF8C3E91E",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "testSlackNotificationLambdaServiceRole5E2AB417": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testSlackNotificationLambdaTopicC5226703": {
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "testSlackNotificationLambdaF8C3E91E",
            "Arn",
          ],
        },
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "testTopic20AA7407",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "testTopic20AA7407": {
      "Properties": {
        "TopicName": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::GetAtt": [
                  "testDeadLetterQueueA5F7D72D",
                  "QueueName",
                ],
              },
              "-alarm-topic",
            ],
          ],
        },
      },
      "Type": "AWS::SNS::Topic",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`MonitoredQueue should create a monitored queue with an email subscription 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "testDLQAlarmFF94B263": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "testTopic20AA7407",
          },
        ],
        "AlarmName": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::GetAtt": [
                  "testDeadLetterQueueA5F7D72D",
                  "QueueName",
                ],
              },
              "-alarm",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "QueueName",
            "Value": {
              "Fn::GetAtt": [
                "testDeadLetterQueueA5F7D72D",
                "QueueName",
              ],
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ApproximateNumberOfMessagesVisible",
        "Namespace": "AWS/SQS",
        "OKActions": [
          {
            "Ref": "testTopic20AA7407",
          },
        ],
        "Period": 300,
        "Statistic": "Maximum",
        "Threshold": 5,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "testDeadLetterQueueA5F7D72D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "QueueName": "test-dlq",
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "testQueueA1A031F3": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "QueueName": "test",
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "testDeadLetterQueueA5F7D72D",
              "Arn",
            ],
          },
          "maxReceiveCount": 3,
        },
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "testTopic20AA7407": {
      "Properties": {
        "TopicName": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::GetAtt": [
                  "testDeadLetterQueueA5F7D72D",
                  "QueueName",
                ],
              },
              "-alarm-topic",
            ],
          ],
        },
      },
      "Type": "AWS::SNS::Topic",
    },
    "testTopictestemailtestcomC7B96C79": {
      "Properties": {
        "Endpoint": "testemail@test.com",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "testTopic20AA7407",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
